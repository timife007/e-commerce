version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-ecommerce
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker-ecommerce
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9093:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#  gateway-service:
#    build: ./gateway-service
#    container_name: gatewayservice
#    depends_on:
#      - broker
#    ports:
#      - "8080:8080"
#    environment:
#      TIMIFE_KAFKA_TOKEN_TOPIC: 'token.published'
#      SPRING_PROFILES_ACTIVE: 'production'

  auth-db:
    container_name: auth-postgres-db
    image: postgres
    env_file:
      - ./env/auth.env
    ports:
      - "5433:5432"
  pgadmin:
    container_name: auth-pgadmin
    image: dpage/pgadmin4
    env_file:
      - ./env/auth.env
    ports:
      - "5050:80"
    restart: unless-stopped



#  authentication:
#    build: ./authentication
#    container_name: authentication
#    depends_on:
#      - broker
#      - auth-db
#    ports:
#      - "8081:8080"



